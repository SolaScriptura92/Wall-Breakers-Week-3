bool sortByLastCol(const vector<int>& x, const vector<int>& y)
{
    return x[1] < y[1];
}

class Solution {
public:
    vector<vector<int>> merge(vector<vector<int>>& intervals) 
    {
        vector<vector<int>> answer;
        vector<int> temp;
        
        if(intervals.size() == 0)
            return answer;
        
        if(intervals.size() == 1)
        {
            answer.push_back(intervals[0]);
            return answer;
        }
 
        sort(intervals.begin(), intervals.end(), sortByLastCol);
        
        int lowestBound = intervals[intervals.size() - 1][0];
        int highestBound = intervals[intervals.size() - 1][1];
        
        for(int i = intervals.size() - 1; i >= 0; i--)
        {
            
            if(intervals[i][1] < lowestBound)
            {
                
                temp.push_back(lowestBound);
                temp.push_back(highestBound);
                answer.push_back(temp);
                temp.clear();
                
                highestBound = intervals[i][1];
                
                lowestBound = intervals[i][0];
            }
            
            else
            {
                 if(intervals[i][0] < lowestBound)
                    lowestBound = intervals[i][0];
            }
        }
        
         temp.push_back(lowestBound);
         temp.push_back(highestBound);
         answer.push_back(temp);
 
        return answer;
    }
};
